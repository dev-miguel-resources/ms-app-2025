version: "3.8"

services:
  gateway:
   container_name: gateway
   image: gateway
   restart: always
   build:
    context: .
    dockerfile: api-gateway/dockerfile
    args:
     - BASE_DIR=api-gateway
   env_file:
    - ./api-gateway/.env
   ports:
      - 9500:8000
   networks:
    - net-ms
   depends_on:
     - rabbitmq

  auth-ms:
    container_name: auth-ms
    image: auth-ms
    restart: always
    build:
      context: .
      dockerfile: auth-ms/Dockerfile
      args:
        - BASE_DIR=auth-ms
    env_file:
      - ./auth-ms/.env
    networks:
      - net-ms
    depends_on:
      - mongo-auth  

  mongo-auth:
    image: mongo:3.6
    container_name: mongo-auth
    restart: always
    ports:
      - 27018:27017
    volumes:
      - mongo-vol-auth:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: test
    networks:
      - net-ms
  
  mongo-order:
    image: mongo:3.6
    container_name: mongo-order
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongo-vol-order:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: test
    networks:
      - net-ms

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - net-ms  
    
      
volumes:
  mongo-vol-auth:
  mongo-vol-order:  

networks:
  net-ms: